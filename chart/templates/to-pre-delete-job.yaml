{{- if .Values.features.to -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "srm-to.pre-delete-job" . | quote }}
  labels:
    {{- include "srm-to.job-labels" . | nindent 4 }}
    component: hook
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "srm-to.job-labels" . | nindent 8 }}
        component: hook
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "srm-to.serviceAccountName" . | quote }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      {{- if .Values.to.nodeSelectors }}
      nodeSelector:
      {{- toYaml .Values.to.nodeSelectors | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.to.tolerations }}
      tolerations:
      {{- toYaml .Values.to.tolerations | trim | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: cleanup-projects-job
        image: "{{ .Values.to.image.registry }}/{{ .Values.to.image.repository.helmPreDelete }}:{{ .Values.to.image.tag }}"
        command:
          - "/opt/codedx/cleanup/bin/cleanup"
        args:
          - "-kubernetesNamespace"
          - "{{ .Release.Namespace }}"
          - "-logFile"
          - "/opt/codedx/cleanup/logs/cleanup.log"
          - "-logMaxSizeMB"
          - "{{ .Values.to.logs.maxSizeMB }}"
          - "-logMaxBackups"
          - "{{ .Values.to.logs.maxBackups }}"
          - "-storageEndpoint"
          - "{{ include "srm-to.storageEndpoint" . }}"
          - "-storageTlsEnabled={{ include "srm-to.storageTlsEnabled" . }}"
          - "-storageBucket"
          - "{{ .Values.to.workflowStorage.bucketName }}"
          - "-storageCredentialSecretName"
          - "{{ include "srm-to.storageCredentialSecretName" . }}"
          - "-storageTlsConfigMapName"
          - "{{ include "srm-to.storageTlsConfigMapName" . }}"
          - "-storageTlsConfigMapPublicCertName"
          - "{{ include "srm-to.storageTlsConfigMapPublicCertName" . }}"
          - "-workDir"
          - "/opt/codedx/cleanup/work"
        volumeMounts:
        - name: storage-secret-volume
          mountPath: "/opt/codedx/cleanup/secrets/storageUsername"
          readOnly: true
          subPath: storageUsername
        - name: storage-secret-volume
          mountPath: "/opt/codedx/cleanup/secrets/storagePassword"
          readOnly: true
          subPath: storagePassword
        {{- if .Values.to.workflowStorage.configMapName }}
        - name: storage-cert-volume
          mountPath: /etc/ssl/certs/cdx-minio.pem
          subPath: cdx-minio.pem
          readOnly: true
        {{- end }}
        {{- if .Values.to.tlsSecret }}
        - name: tool-service-tls-volume
          mountPath: "/opt/codedx/cleanup/tls"
        {{- end }}
      volumes:
      - name: storage-secret-volume
        secret:
          secretName: {{ include "srm-to.storageCredentialSecretName" . | quote }}
          items:
          - key: access-key
            path: storageUsername
          - key: secret-key
            path: storagePassword
      {{- if .Values.to.workflowStorage.configMapName }}
      - name: storage-cert-volume
        configMap:
          name: {{ .Values.to.workflowStorage.configMapName }}
          items:
            - key: {{ .Values.to.workflowStorage.configMapPublicCertKeyName }}
              path: cdx-minio.pem
      {{- end }}
      {{- if .Values.to.tlsSecret }}
      - name: tool-service-tls-volume
        secret:
          secretName: {{ .Values.to.tlsSecret }}
      {{- end }}
{{- end -}}