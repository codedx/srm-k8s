$ErrorActionPreference = 'Stop'
$VerbosePreference = 'Continue'

Import-Module 'pester' -ErrorAction SilentlyContinue
if (-not $?) {
	Write-Host 'Pester is not installed, so this test cannot run. Run pwsh, install the Pester module (Install-Module Pester), and re-run this script.'
	exit 1
}

BeforeAll {
	. (Join-Path $PSScriptRoot '../../keyvalue.ps1')
	. (Join-Path $PSScriptRoot '../../build/protect.ps1')
	. (Join-Path $PSScriptRoot '../../config.ps1')
}

Describe 'Parsing config' -Tag 'upgrade' {

	It 'should upgrade from on-cluster v1.3' {

		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
			"configVersion": "1.3",
			"namespace": "srm",
			"releaseName": "srm",
			"workDir": "C:\\tmp",
			"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
			"scanFarmSastLicenseFile": null,
			"scanFarmScaLicenseFile": null,
			"repoUsername": null,
			"repoPwd": null,
			"scanFarmDatabaseHost": null,
			"scanFarmDatabasePort": null,
			"scanFarmDatabaseUser": null,
			"scanFarmDatabasePwd": null,
			"scanFarmDatabaseSslMode": null,
			"scanFarmDatabaseServerCert": null,
			"scanFarmScanDatabaseCatalog": null,
			"scanFarmStorageDatabaseCatalog": null,
			"scanFarmRedisHost": null,
			"scanFarmRedisPort": null,
			"scanFarmRedisDatabase": null,
			"scanFarmRedisUseAuth": false,
			"scanFarmRedisPwd": null,
			"scanFarmRedisSecure": false,
			"scanFarmRedisVerifyHostname": false,
			"scanFarmRedisServerCert": null,
			"scanFarmStorageType": null,
			"scanFarmStorageBucketName": null,
			"scanFarmCacheBucketName": null,
			"scanFarmS3UseServiceAccountName": false,
			"scanFarmS3AccessKey": null,
			"scanFarmS3SecretKey": null,
			"scanFarmS3ServiceAccountName": null,
			"scanFarmS3Region": null,
			"scanFarmGcsProjectName": null,
			"scanFarmGcsSvcAccountKey": null,
			"scanFarmAzureStorageAccount": null,
			"scanFarmAzureStorageAccountKey": null,
			"scanFarmAzureSubscriptionId": null,
			"scanFarmAzureTenantId": null,
			"scanFarmAzureResourceGroup": null,
			"scanFarmAzureEndpoint": null,
			"scanFarmAzureClientId": null,
			"scanFarmAzureClientSecret": null,
			"scanFarmMinIOHostname": null,
			"scanFarmMinIOPort": null,
			"scanFarmMinIORootUsername": null,
			"scanFarmMinIORootPwd": null,
			"scanFarmMinIOSecure": false,
			"scanFarmMinIOVerifyHostname": false,
			"scanFarmMinIOServerCert": null,
			"scanFarmStorageHasInClusterUrl": false,
			"scanFarmStorageInClusterUrl": null,
			"scanFarmStorageIsProxied": true,
			"scanFarmStorageContextPath": "upload",
			"scanFarmStorageExternalUrl": "",
			"useGeneratedPwds": true,
			"mariadbRootPwd": null,
			"mariadbReplicatorPwd": null,
			"srmDatabaseUserPwd": null,
			"adminPwd": null,
			"toolServiceApiKey": null,
			"minioAdminPwd": null,
			"k8sProvider": "Other",
			"kubeApiTargetPort": "443",
			"clusterCertificateAuthorityCertPath": null,
			"csrSignerName": null,
			"createSCCs": false,
			"scanFarmType": 0,
			"skipDatabase": false,
			"useTriageAssistant": true,
			"skipScanFarm": true,
			"skipToolOrchestration": false,
			"skipMinIO": false,
			"skipNetworkPolicies": true,
			"skipTls": true,
			"toolServiceReplicas": 0,
			"dbSlaveReplicaCount": 0,
			"externalDatabaseHost": null,
			"externalDatabasePort": 3306,
			"externalDatabaseName": null,
			"externalDatabaseUser": null,
			"externalDatabasePwd": null,
			"externalDatabaseSkipTls": false,
			"externalDatabaseTrustCert": false,
			"externalDatabaseServerCert": null,
			"externalWorkflowStorageEndpoint": null,
			"externalWorkflowStorageEndpointSecure": false,
			"externalWorkflowStorageUsername": null,
			"externalWorkflowStoragePwd": null,
			"externalWorkflowStorageBucketName": null,
			"externalWorkflowStorageTrustCert": false,
			"externalWorkflowStorageCertChainPath": null,
			"addExtraCertificates": false,
			"extraTrustedCaCertPaths": null,
			"webServiceType": "ClusterIP",
			"webServicePortNumber": "9090",
			"webServiceAnnotations": [],
			"skipIngressEnabled": true,
			"ingressType": "ClusterIP",
			"ingressClassName": null,
			"ingressAnnotations": [],
			"ingressHostname": null,
			"ingressTlsSecretName": null,
			"ingressTlsType": null,
			"useSaml": false,
			"useLdap": false,
			"samlHostBasePath": null,
			"samlIdentityProviderMetadataPath": null,
			"samlAppName": null,
			"samlKeystorePwd": null,
			"samlPrivateKeyPwd": null,
			"skipDockerRegistryCredential": true,
			"dockerImagePullSecretName": null,
			"dockerRegistry": null,
			"dockerRegistryUser": null,
			"dockerRegistryPwd": null,
			"useDefaultDockerImages": true,
			"imageVersionWeb": null,
			"imageVersionMariaDB": null,
			"imageVersionTo": null,
			"imageVersionMinio": null,
			"imageVersionWorkflow": null,
			"useDockerRedirection": false,
			"useDockerRepositoryPrefix": false,
			"dockerRepositoryPrefix": null,
			"useDefaultCACerts": true,
			"caCertsFilePath": null,
			"caCertsFilePwd": null,
			"useCPUDefaults": false,
			"webCPUReservation": null,
			"dbMasterCPUReservation": null,
			"dbSlaveCPUReservation": null,
			"toolServiceCPUReservation": null,
			"minioCPUReservation": null,
			"workflowCPUReservation": null,
			"useMemoryDefaults": false,
			"webMemoryReservation": null,
			"dbMasterMemoryReservation": null,
			"dbSlaveMemoryReservation": null,
			"toolServiceMemoryReservation": null,
			"minioMemoryReservation": null,
			"workflowMemoryReservation": null,
			"useEphemeralStorageDefaults": false,
			"webEphemeralStorageReservation": null,
			"dbMasterEphemeralStorageReservation": null,
			"dbSlaveEphemeralStorageReservation": null,
			"toolServiceEphemeralStorageReservation": null,
			"minioEphemeralStorageReservation": null,
			"workflowEphemeralStorageReservation": null,
			"useVolumeSizeDefaults": false,
			"webVolumeSizeGiB": 0,
			"dbVolumeSizeGiB": 0,
			"dbSlaveVolumeSizeGiB": 0,
			"dbSlaveBackupVolumeSizeGiB": 0,
			"minioVolumeSizeGiB": 0,
			"storageClassName": "",
			"systemSize": "Small",
			"useNodeSelectors": false,
			"webNodeSelector": null,
			"masterDatabaseNodeSelector": null,
			"subordinateDatabaseNodeSelector": null,
			"toolServiceNodeSelector": null,
			"minioNodeSelector": null,
			"workflowControllerNodeSelector": null,
			"toolNodeSelector": null,
			"useTolerations": false,
			"webNoScheduleExecuteToleration": null,
			"masterDatabaseNoScheduleExecuteToleration": null,
			"subordinateDatabaseNoScheduleExecuteToleration": null,
			"toolServiceNoScheduleExecuteToleration": null,
			"minioNoScheduleExecuteToleration": null,
			"workflowControllerNoScheduleExecuteToleration": null,
			"toolNoScheduleExecuteToleration": null,
			"notes": [],
			"salts": [],
			"isLocked": false,
			"scanFarmScaApiUrlOverride": null
		  }
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot3 = new-object Management.Automation.SemanticVersion('1.3')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot3 | Should -BeTrue

		$config.workflowStorageType | Should -BeExactly 'OnCluster'
		$config.serviceAccountToolService | Should -BeExactly ''
		$config.serviceAccountWorkflow | Should -BeExactly ''
		$config.skipMinIO | Should -BeFalse
	}

	It 'should upgrade from access-key v1.3' {

		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
			"configVersion": "1.3",
			"namespace": "srm",
			"releaseName": "srm",
			"workDir": "C:\\tmp",
			"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
			"scanFarmSastLicenseFile": "",
			"scanFarmScaLicenseFile": "",
			"repoUsername": "",
			"repoPwd": "",
			"scanFarmDatabaseHost": "",
			"scanFarmDatabasePort": "",
			"scanFarmDatabaseUser": "",
			"scanFarmDatabasePwd": "",
			"scanFarmDatabaseSslMode": "",
			"scanFarmDatabaseServerCert": "",
			"scanFarmScanDatabaseCatalog": "",
			"scanFarmStorageDatabaseCatalog": "",
			"scanFarmRedisHost": "",
			"scanFarmRedisPort": "",
			"scanFarmRedisDatabase": "",
			"scanFarmRedisUseAuth": false,
			"scanFarmRedisPwd": "",
			"scanFarmRedisSecure": false,
			"scanFarmRedisVerifyHostname": false,
			"scanFarmRedisServerCert": "",
			"scanFarmStorageType": "",
			"scanFarmStorageBucketName": "",
			"scanFarmCacheBucketName": "",
			"scanFarmS3UseServiceAccountName": false,
			"scanFarmS3AccessKey": "",
			"scanFarmS3SecretKey": "",
			"scanFarmS3ServiceAccountName": "",
			"scanFarmS3Region": "",
			"scanFarmGcsProjectName": "",
			"scanFarmGcsSvcAccountKey": "",
			"scanFarmAzureStorageAccount": "",
			"scanFarmAzureStorageAccountKey": "",
			"scanFarmAzureSubscriptionId": "",
			"scanFarmAzureTenantId": "",
			"scanFarmAzureResourceGroup": "",
			"scanFarmAzureEndpoint": "",
			"scanFarmAzureClientId": "",
			"scanFarmAzureClientSecret": "",
			"scanFarmMinIOHostname": "",
			"scanFarmMinIOPort": "",
			"scanFarmMinIORootUsername": "",
			"scanFarmMinIORootPwd": "",
			"scanFarmMinIOSecure": false,
			"scanFarmMinIOVerifyHostname": false,
			"scanFarmMinIOServerCert": "",
			"scanFarmStorageHasInClusterUrl": false,
			"scanFarmStorageInClusterUrl": "",
			"scanFarmStorageIsProxied": true,
			"scanFarmStorageContextPath": "upload",
			"scanFarmStorageExternalUrl": "",
			"useGeneratedPwds": true,
			"mariadbRootPwd": "",
			"mariadbReplicatorPwd": "",
			"srmDatabaseUserPwd": "",
			"adminPwd": "",
			"toolServiceApiKey": "",
			"minioAdminPwd": "",
			"k8sProvider": "Other",
			"kubeApiTargetPort": "443",
			"clusterCertificateAuthorityCertPath": "",
			"csrSignerName": "",
			"createSCCs": false,
			"scanFarmType": 0,
			"skipDatabase": false,
			"useTriageAssistant": true,
			"skipScanFarm": true,
			"skipToolOrchestration": false,
			"skipMinIO": true,
			"skipNetworkPolicies": true,
			"skipTls": true,
			"toolServiceReplicas": 0,
			"dbSlaveReplicaCount": 0,
			"externalDatabaseHost": "",
			"externalDatabasePort": 3306,
			"externalDatabaseName": "",
			"externalDatabaseUser": "",
			"externalDatabasePwd": "",
			"externalDatabaseSkipTls": false,
			"externalDatabaseTrustCert": false,
			"externalDatabaseServerCert": "",
			"externalWorkflowStorageEndpoint": "endpoint",
			"externalWorkflowStorageEndpointSecure": true,
			"externalWorkflowStorageUsername": "username",
			"externalWorkflowStoragePwd": "password",
			"externalWorkflowStorageBucketName": "bucket",
			"externalWorkflowStorageTrustCert": false,
			"externalWorkflowStorageCertChainPath": "",
			"addExtraCertificates": false,
			"extraTrustedCaCertPaths": null,
			"webServiceType": "ClusterIP",
			"webServicePortNumber": "9090",
			"webServiceAnnotations": [],
			"skipIngressEnabled": true,
			"ingressType": "ClusterIP",
			"ingressClassName": "",
			"ingressAnnotations": [],
			"ingressHostname": "",
			"ingressTlsSecretName": "",
			"ingressTlsType": "",
			"useSaml": false,
			"useLdap": false,
			"samlHostBasePath": "",
			"samlIdentityProviderMetadataPath": "",
			"samlAppName": "",
			"samlKeystorePwd": "",
			"samlPrivateKeyPwd": "",
			"skipDockerRegistryCredential": true,
			"dockerImagePullSecretName": "",
			"dockerRegistry": "",
			"dockerRegistryUser": "",
			"dockerRegistryPwd": "",
			"useDefaultDockerImages": true,
			"imageVersionWeb": "",
			"imageVersionMariaDB": "",
			"imageVersionTo": "",
			"imageVersionMinio": "",
			"imageVersionWorkflow": "",
			"useDockerRedirection": false,
			"useDockerRepositoryPrefix": false,
			"dockerRepositoryPrefix": "",
			"useDefaultCACerts": true,
			"caCertsFilePath": "",
			"caCertsFilePwd": "",
			"useCPUDefaults": false,
			"webCPUReservation": "",
			"dbMasterCPUReservation": "",
			"dbSlaveCPUReservation": "",
			"toolServiceCPUReservation": "",
			"minioCPUReservation": "",
			"workflowCPUReservation": "",
			"useMemoryDefaults": false,
			"webMemoryReservation": "",
			"dbMasterMemoryReservation": "",
			"dbSlaveMemoryReservation": "",
			"toolServiceMemoryReservation": "",
			"minioMemoryReservation": "",
			"workflowMemoryReservation": "",
			"useEphemeralStorageDefaults": false,
			"webEphemeralStorageReservation": "",
			"dbMasterEphemeralStorageReservation": "",
			"dbSlaveEphemeralStorageReservation": "",
			"toolServiceEphemeralStorageReservation": "",
			"minioEphemeralStorageReservation": "",
			"workflowEphemeralStorageReservation": "",
			"useVolumeSizeDefaults": false,
			"webVolumeSizeGiB": 0,
			"dbVolumeSizeGiB": 0,
			"dbSlaveVolumeSizeGiB": 0,
			"dbSlaveBackupVolumeSizeGiB": 0,
			"minioVolumeSizeGiB": 0,
			"storageClassName": "",
			"systemSize": "Small",
			"useNodeSelectors": false,
			"webNodeSelector": null,
			"masterDatabaseNodeSelector": null,
			"subordinateDatabaseNodeSelector": null,
			"toolServiceNodeSelector": null,
			"minioNodeSelector": null,
			"workflowControllerNodeSelector": null,
			"toolNodeSelector": null,
			"useTolerations": false,
			"webNoScheduleExecuteToleration": null,
			"masterDatabaseNoScheduleExecuteToleration": null,
			"subordinateDatabaseNoScheduleExecuteToleration": null,
			"toolServiceNoScheduleExecuteToleration": null,
			"minioNoScheduleExecuteToleration": null,
			"workflowControllerNoScheduleExecuteToleration": null,
			"toolNoScheduleExecuteToleration": null,
			"notes": null,
			"salts": [],
			"isLocked": false,
			"scanFarmScaApiUrlOverride": ""
		  }	  
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot3 = new-object Management.Automation.SemanticVersion('1.3')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot3 | Should -BeTrue

		$config.workflowStorageType | Should -BeExactly 'AccessKey'
		$config.serviceAccountToolService | Should -BeExactly ''
		$config.serviceAccountWorkflow | Should -BeExactly ''
		$config.externalWorkflowStorageEndpoint | Should -BeExactly 'endpoint'
		$config.externalWorkflowStorageEndpointSecure | Should -BeTrue
		$config.externalWorkflowStorageBucketName | Should -BeExactly 'bucket'
		$config.externalWorkflowStorageUsername | Should -BeExactly 'username'
		$config.externalWorkflowStoragePwd | Should -BeExactly 'password'
		$config.skipMinIO | Should -BeTrue
	}

	It 'should upgrade from v1.4' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
		"configVersion": "1.4",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"repoUsername": "",
		"repoPwd": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"notes": [],
		"salts": [],
		"isLocked": false,
		"scanFarmScaApiUrlOverride": ""
		}
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot4 = new-object Management.Automation.SemanticVersion('1.4')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot4 | Should -BeTrue

		$config.authCookieSecure | Should -BeFalse
	}

	It 'should upgrade from v1.5' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
	{
		"configVersion": "1.5",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"authCookieSecure": false,
		"notes": [],
		"salts": null,
		"isLocked": false,
		"scanFarmScaApiUrlOverride": "",
		"sigRepoUsername": "sigRepoUsername",
		"sigRepoPwd": "sigRepoPwd"
	}	
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot6 = new-object Management.Automation.SemanticVersion('1.6')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot6 | Should -BeTrue

		$config.repoUsername | Should -BeExactly 'sigRepoUsername'
		$config.repoPwd | Should -BeExactly 'sigRepoPwd'
		$config.psobject.properties['sigRepoUsername'] | Should -BeExactly $null
		$config.psobject.properties['sigRepoPwd'] | Should -BeExactly $null
	}

	It 'should upgrade from v1.6' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
	{
		"configVersion": "1.6",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"repoUsername": "",
		"repoPwd": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"authCookieSecure": false,
		"notes": [],
		"salts": null,
		"isLocked": false,
		"scanFarmScaApiUrlOverride": ""
	}	
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot7 = new-object Management.Automation.SemanticVersion('1.7')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot7 | Should -BeTrue

		$config.scanFarmCombinedLicenseFile | Should -BeExactly ''
		$config.scanFarmLicenseFormatType | Should -BeExactly 'Legacy'
	}

	It 'should upgrade from v1.7' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
		"configVersion": "1.7",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"scanFarmCombinedLicenseFile": "",
		"scanFarmLicenseFormatType": "Legacy",
		"repoUsername": "",
		"repoPwd": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"authCookieSecure": false,
		"notes": [],
		"salts": null,
		"isLocked": false,
		"scanFarmScaApiUrlOverride": ""
		}	
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot8 = new-object Management.Automation.SemanticVersion('1.8')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot8 | Should -BeTrue

		$config.externalDatabaseAuthType | Should -BeExactly 'Password'
		$config.skipWebServiceAccountCreate | Should -BeFalse
		$config.webServiceAccountName | Should -BeExactly ''
	}

	It 'should upgrade from v1.8' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
		"configVersion": "1.8",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"scanFarmCombinedLicenseFile": "",
		"scanFarmLicenseFormatType": "Legacy",
		"repoUsername": "",
		"repoPwd": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "csrSignerName",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseAuthType": "Password",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"authCookieSecure": false,
		"notes": [],
		"skipWebServiceAccountCreate": false,
		"webServiceAccountName": "",
		"salts": null,
		"isLocked": false,
		"scanFarmScaApiUrlOverride": ""
		}	
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot9 = new-object Management.Automation.SemanticVersion('1.9')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -gt $v1Dot9 | Should -BeTrue

		$config.componentTlsType | Should -BeExactly 'K8sCSR'
		$config.certManagerIssuerName | Should -BeExactly ''
		$config.certManagerIssuerType | Should -BeExactly 'None'
	}

	It 'should upgrade from v1.9' {
		$configJsonPath = Join-Path $TestDrive ([Guid]::NewGuid())
		@'
		{
		"configVersion": "1.9",
		"namespace": "srm",
		"releaseName": "srm",
		"workDir": "C:\\tmp",
		"srmLicenseFile": "C:\\tmp\\srm-web-license.txt",
		"scanFarmSastLicenseFile": "",
		"scanFarmScaLicenseFile": "",
		"scanFarmCombinedLicenseFile": "",
		"scanFarmLicenseFormatType": "Legacy",
		"repoUsername": "",
		"repoPwd": "",
		"scanFarmDatabaseHost": "",
		"scanFarmDatabasePort": "",
		"scanFarmDatabaseUser": "",
		"scanFarmDatabasePwd": "",
		"scanFarmDatabaseSslMode": "",
		"scanFarmDatabaseServerCert": "",
		"scanFarmScanDatabaseCatalog": "",
		"scanFarmStorageDatabaseCatalog": "",
		"scanFarmRedisHost": "",
		"scanFarmRedisPort": "",
		"scanFarmRedisDatabase": "",
		"scanFarmRedisUseAuth": false,
		"scanFarmRedisPwd": "",
		"scanFarmRedisSecure": false,
		"scanFarmRedisVerifyHostname": false,
		"scanFarmRedisServerCert": "",
		"scanFarmStorageType": "",
		"scanFarmStorageBucketName": "",
		"scanFarmCacheBucketName": "",
		"scanFarmS3UseServiceAccountName": false,
		"scanFarmS3AccessKey": "",
		"scanFarmS3SecretKey": "",
		"scanFarmS3ServiceAccountName": "",
		"scanFarmS3Region": "",
		"scanFarmGcsProjectName": "",
		"scanFarmGcsSvcAccountKey": "",
		"scanFarmAzureStorageAccount": "",
		"scanFarmAzureStorageAccountKey": "",
		"scanFarmAzureSubscriptionId": "",
		"scanFarmAzureTenantId": "",
		"scanFarmAzureResourceGroup": "",
		"scanFarmAzureEndpoint": "",
		"scanFarmAzureClientId": "",
		"scanFarmAzureClientSecret": "",
		"scanFarmMinIOHostname": "",
		"scanFarmMinIOPort": "",
		"scanFarmMinIORootUsername": "",
		"scanFarmMinIORootPwd": "",
		"scanFarmMinIOSecure": false,
		"scanFarmMinIOVerifyHostname": false,
		"scanFarmMinIOServerCert": "",
		"scanFarmStorageHasInClusterUrl": false,
		"scanFarmStorageInClusterUrl": "",
		"scanFarmStorageIsProxied": true,
		"scanFarmStorageContextPath": "upload",
		"scanFarmStorageExternalUrl": "",
		"useGeneratedPwds": true,
		"mariadbRootPwd": "",
		"mariadbReplicatorPwd": "",
		"srmDatabaseUserPwd": "",
		"adminPwd": "",
		"toolServiceApiKey": "",
		"minioAdminPwd": "",
		"k8sProvider": "Other",
		"kubeApiTargetPort": "443",
		"clusterCertificateAuthorityCertPath": "",
		"csrSignerName": "",
		"createSCCs": false,
		"scanFarmType": 0,
		"skipDatabase": false,
		"useTriageAssistant": true,
		"skipScanFarm": true,
		"skipToolOrchestration": false,
		"skipMinIO": false,
		"skipNetworkPolicies": true,
		"skipTls": true,
		"componentTlsType": "None",
		"certManagerIssuerName": "",
		"certManagerIssuerType": "None",
		"workflowStorageType": "OnCluster",
		"serviceAccountToolService": "",
		"serviceAccountWorkflow": "",
		"toolServiceReplicas": 0,
		"dbSlaveReplicaCount": 0,
		"externalDatabaseHost": "",
		"externalDatabasePort": 3306,
		"externalDatabaseName": "",
		"externalDatabaseAuthType": "Password",
		"externalDatabaseUser": "",
		"externalDatabasePwd": "",
		"externalDatabaseSkipTls": false,
		"externalDatabaseTrustCert": false,
		"externalDatabaseServerCert": "",
		"externalWorkflowStorageEndpoint": "",
		"externalWorkflowStorageEndpointSecure": false,
		"externalWorkflowStorageUsername": "",
		"externalWorkflowStoragePwd": "",
		"externalWorkflowStorageBucketName": "",
		"externalWorkflowStorageTrustCert": false,
		"externalWorkflowStorageCertChainPath": "",
		"addExtraCertificates": false,
		"extraTrustedCaCertPaths": null,
		"webServiceType": "ClusterIP",
		"webServicePortNumber": "9090",
		"webServiceAnnotations": [],
		"skipIngressEnabled": true,
		"ingressType": "ClusterIP",
		"ingressClassName": "",
		"ingressAnnotations": [],
		"ingressHostname": "",
		"ingressTlsSecretName": "",
		"ingressTlsType": "",
		"useSaml": false,
		"useLdap": false,
		"samlHostBasePath": "",
		"samlIdentityProviderMetadataPath": "",
		"samlAppName": "",
		"samlKeystorePwd": "",
		"samlPrivateKeyPwd": "",
		"skipDockerRegistryCredential": true,
		"dockerImagePullSecretName": "",
		"dockerRegistry": "",
		"dockerRegistryUser": "",
		"dockerRegistryPwd": "",
		"useDefaultDockerImages": true,
		"imageVersionWeb": "",
		"imageVersionMariaDB": "",
		"imageVersionTo": "",
		"imageVersionMinio": "",
		"imageVersionWorkflow": "",
		"useDockerRedirection": false,
		"useDockerRepositoryPrefix": false,
		"dockerRepositoryPrefix": "",
		"useDefaultCACerts": true,
		"caCertsFilePath": "",
		"caCertsFilePwd": "",
		"useCPUDefaults": false,
		"webCPUReservation": "",
		"dbMasterCPUReservation": "",
		"dbSlaveCPUReservation": "",
		"toolServiceCPUReservation": "",
		"minioCPUReservation": "",
		"workflowCPUReservation": "",
		"useMemoryDefaults": false,
		"webMemoryReservation": "",
		"dbMasterMemoryReservation": "",
		"dbSlaveMemoryReservation": "",
		"toolServiceMemoryReservation": "",
		"minioMemoryReservation": "",
		"workflowMemoryReservation": "",
		"useEphemeralStorageDefaults": false,
		"webEphemeralStorageReservation": "",
		"dbMasterEphemeralStorageReservation": "",
		"dbSlaveEphemeralStorageReservation": "",
		"toolServiceEphemeralStorageReservation": "",
		"minioEphemeralStorageReservation": "",
		"workflowEphemeralStorageReservation": "",
		"useVolumeSizeDefaults": false,
		"webVolumeSizeGiB": 0,
		"dbVolumeSizeGiB": 0,
		"dbSlaveVolumeSizeGiB": 0,
		"dbSlaveBackupVolumeSizeGiB": 0,
		"minioVolumeSizeGiB": 0,
		"storageClassName": "",
		"systemSize": "Small",
		"useNodeSelectors": false,
		"webNodeSelector": null,
		"masterDatabaseNodeSelector": null,
		"subordinateDatabaseNodeSelector": null,
		"toolServiceNodeSelector": null,
		"minioNodeSelector": null,
		"workflowControllerNodeSelector": null,
		"toolNodeSelector": null,
		"useTolerations": false,
		"webNoScheduleExecuteToleration": null,
		"masterDatabaseNoScheduleExecuteToleration": null,
		"subordinateDatabaseNoScheduleExecuteToleration": null,
		"toolServiceNoScheduleExecuteToleration": null,
		"minioNoScheduleExecuteToleration": null,
		"workflowControllerNoScheduleExecuteToleration": null,
		"toolNoScheduleExecuteToleration": null,
		"authCookieSecure": false,
		"notes": [],
		"skipWebServiceAccountCreate": false,
		"webServiceAccountName": "",
		"salts": null,
		"isLocked": false,
		"scanFarmScaApiUrlOverride": ""
		}	
'@ | Out-file $configJsonPath

		$config = [Config]::FromJsonFile($configJsonPath)

		$v1Dot10 = new-object Management.Automation.SemanticVersion('1.10')
		$version = new-object Management.Automation.SemanticVersion($config.configVersion)

		$version -eq $v1Dot10 | Should -BeTrue

		$config.psobject.properties['routeTlsType'] | Should -Not -BeNullOrEmpty
		$config.psobject.properties['routeTlsKeyPath'] | Should -Not -BeNullOrEmpty
		$config.psobject.properties['routeTlsCertificatePath'] | Should -Not -BeNullOrEmpty
		$config.psobject.properties['routeTlsUseCACertificate'] | Should -Not -BeNullOrEmpty
		$config.psobject.properties['routeTlsCACertificatePath'] | Should -Not -BeNullOrEmpty
		$config.psobject.properties['routeHostname'] | Should -Not -BeNullOrEmpty
	}
}