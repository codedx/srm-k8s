class Finish : Step {

	static [string] hidden $description = @'
You have specified what's necessary to run the core setup script. This
tool will generate your config.json file, an input to the helm prep 
script that will produce helm commands, value(s) files, and any
required prerequisite K8s resources.

This is likely the last time you will run this tool. 

The next step will be to run the run-helm-prep.ps1 script generated by this
tool. You will rerun the the core setup script when reinstalling or
upgrading SRM using the deployment configuration you specified.
'@

	Finish([Config] $config) : base(
		[Finish].Name, 
		$config,
		'Finish',
		[Finish]::description,
		'Are you ready to generate your run-helm-prep.ps1 script?') {}

	[IQuestion]MakeQuestion([string] $prompt) {

		$options = @(
			[tuple]::create('&Save Script', 'Save your run-helm-prep.ps1 script')
		)
		return new-object MultipleChoiceQuestion($prompt, $options, 0)
	}

	[bool]HandleResponse([IQuestion] $question) {

		$configJson = [IO.Path]::GetFullPath((Join-Path $this.config.workDir 'config.json'))
		$this.config | ConvertTo-Json | Out-File $configJson

		$runSetupScriptPath = [IO.Path]::GetFullPath((Join-Path $this.config.workDir './run-helm-prep.ps1'))
		Write-Host "`nWriting $runSetupScriptPath..."
		"$([IO.Path]::GetFullPath((Join-Path $PSScriptRoot '../helm-prep.ps1'))) -configPath '$configJson'" | Out-File $runSetupScriptPath

		$this.PrintNotes()
		Write-Host "`nGenerate/re-generate helm command and required resource YAMLs by running: `n  pwsh ""$runSetupScriptPath""`n"

		return $true
	}

	[void]PrintNotes() {

		if ($this.config.notes.count -eq 0) {
			return
		}

		Write-Host "`n---`nInstallation Notes:`n"
		$notesPrinted = New-Object Collections.Generic.HashSet[string]

		$allNotes = @()
		$this.config.notes | ForEach-Object {
			$note = $_.value
			if (-not $notesPrinted.Contains($note)) {
				$notesPrinted.Add($note) | Out-Null
				$allNotes += $note
			}
		}
		$allNotes | Sort-Object | ForEach-Object {
			Write-Host $_
		}
		Write-Host "---`n"
	}
}